/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import dominio.ColorFicha;
import dominio.Huesped;
import dominio.Jugador;
import dominio.Partida;
import static frames.FrmClienteAux.cliente;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import socketCliente.SocketCliente;

/**
 *
 * @author Invitado
 */
public class FrmDireccPartida extends FrmClienteAux {

    private static FrmConfigurarPartida frmConfig;
    private static FrmSeleccion frmSeleccion;

    /**
     * Creates new form FrmDireccPartida
     */
    public FrmDireccPartida() {
        initComponents();
        inicializar();
    }

    /**
     * Inicializa la pantalla.
     */
    private void inicializar() {
        adaptarPantalla();
//        this.setBackground(new Color(0, 0, 0, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUnirse = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblCampoCodigo = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnUnirse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn unirse.png"))); // NOI18N
        btnUnirse.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnUnirse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUnirseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUnirseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUnirseMouseExited(evt);
            }
        });
        getContentPane().add(btnUnirse, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, -1, -1));

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn cancelar.png"))); // NOI18N
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarMouseExited(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, -1, -1));

        txtDireccion.setBackground(new java.awt.Color(243, 242, 237));
        txtDireccion.setFont(new java.awt.Font("Eras Bold ITC", 0, 24)); // NOI18N
        txtDireccion.setForeground(new java.awt.Color(139, 89, 10));
        txtDireccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDireccion.setText("127.0.0.1");
        txtDireccion.setBorder(null);
        txtDireccion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtDireccion.setOpaque(false);
        getContentPane().add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 220, 30));

        lblCampoCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/campo texto gr.png"))); // NOI18N
        getContentPane().add(lblCampoCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, -1, -1));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/frm direcc ip.png"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-140, 0, 740, 380));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUnirseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUnirseMouseClicked
        try {
            if (jugador == null) {
                cliente = new SocketCliente(txtDireccion.getText());
                cliente.setObserver(this);
                new Thread(cliente).start();
            }
            //JOptionPane.showMessageDialog(this, );
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnUnirseMouseClicked

    private void btnUnirseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUnirseMouseEntered
        btnUnirse.setIcon(new ImageIcon("images\\btn unirse 2.png"));
    }//GEN-LAST:event_btnUnirseMouseEntered

    private void btnUnirseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUnirseMouseExited
        btnUnirse.setIcon(new ImageIcon("images\\btn unirse.png"));
    }//GEN-LAST:event_btnUnirseMouseExited

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        this.setVisible(false);
        this.getInstanciaFrmInicio().setVisible(true);
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseEntered
        btnCancelar.setIcon(new ImageIcon("images\\btn cancelar 2.png"));
    }//GEN-LAST:event_btnCancelarMouseEntered

    private void btnCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseExited
        btnCancelar.setIcon(new ImageIcon("images\\btn cancelar.png"));
    }//GEN-LAST:event_btnCancelarMouseExited

    /**
     * Método para ser notificado por el observado.
     *
     * @param partidaLlegada Instancia de la partida actual.
     */
    @Override
    public void update(Partida partidaLlegada) {
        super.update(partidaLlegada);
        try {
            if (partida != null) {
                if (!getFrmConfig().isVisible() && !getFrmSeleccion().isVisible()) {
                    switch (partida.getEstado()) {
                        case CONFIGURACION:
                            if (!partida.getJugadores().get(0).isAsignado()) {
                                jugador = partida.getJugadores().get(0);
                                jugador.setAsignado(true);
                                partida.getJugadores().set(0, jugador);
                                cliente.setObserver(getFrmConfig());
                                getFrmConfig().setVisible(true);
                                cliente.enviar(partida);
                                this.setVisible(false);
                                this.dispose();
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "La partida está siendo configurada.");
                                getFrmInicio().setVisible(true);
                            }
                            break;
                        case ESPERA:
                            for (Jugador jug : partida.getJugadores()) {
                                if (!jug.isAsignado()) {
                                    jugador = jug;
                                    jugador.setAsignado(true);
                                    partida.getJugadores().set(partida.getJugadores().indexOf(jug), jugador);
                                    cliente.setObserver(getFrmSeleccion());
                                    cliente.enviar(partida);
                                    this.setVisible(false);
                                    getFrmSeleccion().setVisible(true);
                                    this.dispose();
                                    break;
                                }
                            }
                            break;
                        case INICIADA:
                            JOptionPane.showMessageDialog(rootPane, "La partida está llena o ya ha comenzado.");
                            break;
                        default:
                            JOptionPane.showMessageDialog(rootPane, "La partida está llena o ya ha comenzado.");
                            break;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Ocurrió un error desconocido.");
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } catch (Throwable ex) {
            Logger.getLogger(FrmDireccPartida.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static FrmConfigurarPartida getFrmConfig() {
        if (frmConfig == null) {
            frmConfig = new FrmConfigurarPartida(cliente, jugador, partida);
        }
        return frmConfig;
    }

    public static FrmSeleccion getFrmSeleccion() {
        if (frmSeleccion == null) {
            frmSeleccion = new FrmSeleccion(cliente, jugador, partida);
        }
        return frmSeleccion;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnCancelar;
    private javax.swing.JLabel btnUnirse;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel lblCampoCodigo;
    private javax.swing.JTextField txtDireccion;
    // End of variables declaration//GEN-END:variables
}
